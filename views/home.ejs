<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
  <script src="https://cdn.tailwindcss.com"></script>
</head>

<body>
  <main class="p-4 bg-gray-100 dark:bg-gray-800 h-screen w-screen">
    <button onclick="showPopUp()" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
      Upload file
    </button>
    <a href="/user/logout" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded">
      Logout
    </a>

    <div class="pop hidden backdrop-blur fixed top-0 left-0 h-screen w-screen flex items-center justify-center">
      <form action="/upload" method="post" enctype="multipart/form-data" id="uploadForm">
        <div class="flex flex-col items-center justify-center w-96">
          <label for="dropzone-file"
            class="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-gray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600">
            <div class="flex flex-col items-center justify-center pt-5 pb-6">
              <svg class="w-8 h-8 mb-4 text-gray-500 dark:text-gray-400" aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 16">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2" />
              </svg>
              <p class="mb-2 text-sm text-gray-500 dark:text-gray-400">
                <span class="font-semibold">Click to upload</span> or drag and drop
              </p>
              <p class="text-xs text-gray-500 dark:text-gray-400">
                SVG, PNG, JPG, GIF, or any file (MAX. 800x400px)
              </p>
            </div>
            <input id="dropzone-file" type="file" class="hidden" name="file" onchange="previewFile()" />
          </label>
        </div>

        <!-- Preview Section -->
        <div id="filePreview" class="mt-4 w-full text-center"></div>

        <button class="bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 my-4 rounded">
          Upload File
        </button>
      </form>

      <button class="absolute top-4 right-4 text-gray-500 dark:text-gray-100 text-xl" onclick="hidePopUp()">
        <i class="ri-close-circle-line"></i>
      </button>
    </div>


    <div class="files mt-3 flex flex-col gap-2">
      <% files.forEach((file)=>{ %>
        <div class="p-2 cursor-pointer rounded-md bg-gray-300 flex justify-between">
          <h1>
            <%=file.originalname%>
          </h1>
          <a href="/download/<%=file.path%>" download="<%= file.originalname %>"
            class="text-blue-500 hover:text-blue-700" target="_blank">
            <i class="ri-download-2-line"></i>
          </a>
        </div>
        <% }) %>
    </div>
  </main>


  <script src="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.js"></script>
  <script>
    function showPopUp() {
      document.querySelector(".pop").style.display = "flex";
    }

    function hidePopUp() {
      document.querySelector(".pop").style.display = "none";
    }

    function previewFile() {
      const fileInput = document.getElementById("dropzone-file");
      const filePreview = document.getElementById("filePreview");

      filePreview.innerHTML = ""; // Clear previous preview

      const file = fileInput.files[0]; // Get the selected file
      if (file) {
        const fileName = document.createElement("p");
        fileName.textContent = `Selected File: ${file.name}`;
        fileName.classList.add("text-gray-700", "dark:text-gray-300");

        const fileSize = document.createElement("p");
        fileSize.textContent = `Size: ${(file.size / 1024).toFixed(2)} KB`;
        fileSize.classList.add("text-gray-500", "text-sm", "dark:text-gray-400");

        filePreview.appendChild(fileName);
        filePreview.appendChild(fileSize);

        // If the file is an image, show a preview
        if (file.type.startsWith("image/")) {
          const imgPreview = document.createElement("img");
          imgPreview.src = URL.createObjectURL(file);
          imgPreview.alt = "Image Preview";
          imgPreview.classList.add("mt-4", "rounded", "w-full", "h-auto", "max-h-48", "object-cover");
          filePreview.appendChild(imgPreview);

          // Revoke the object URL to free memory when no longer needed
          imgPreview.onload = () => URL.revokeObjectURL(imgPreview.src);
        }
      } else {
        filePreview.textContent = "No file selected.";
        filePreview.classList.add("text-gray-500", "text-sm", "dark:text-gray-400");
      }
    }

  </script>
</body>

</html>